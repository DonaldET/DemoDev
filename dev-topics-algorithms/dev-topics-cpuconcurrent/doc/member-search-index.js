memberSearchIndex = [{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"compareTo(ConcurrentCollector.ComputationResult<T>)","u":"compareTo(don.demo.algo.cpuconcurrent.api.ConcurrentCollector.ComputationResult)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"compareTo(ParallelCollect.Computation)","u":"compareTo(don.demo.algo.cpuconcurrent.ParallelCollect.Computation)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"Computation(String, Integer)","u":"%3Cinit%3E(java.lang.String,java.lang.Integer)"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"ComputationResult(String, T)","u":"%3Cinit%3E(java.lang.String,T)"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"ComputationResultTest()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator.MockDataDTO","l":"data"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator","l":"DataGenerator()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"DataGeneratorTest()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator.MockDataDTO","l":"expectedKeySet"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector","l":"fastWorker"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ForEachCollector","l":"ForEachCollector()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ForEachConcurrentCollector","l":"ForEachConcurrentCollector()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator","l":"generate(int)"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"hashCode()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"hashCode()"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"id"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"id"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ListCollector","l":"ListCollector()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelForEach","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator.MockDataDTO","l":"MockDataDTO(int[], int, int, Set<String>)","u":"%3Cinit%3E(int[],int,int,java.util.Set)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect","l":"ParallelCollect()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelForEach","l":"ParallelForEach()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner","l":"ParallelRunner()","u":"%3Cinit%3E()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ForEachCollector","l":"runStream(IntStream, Function<Integer, Integer>)","u":"runStream(java.util.stream.IntStream,java.util.function.Function)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ForEachConcurrentCollector","l":"runStream(IntStream, Function<Integer, Integer>)","u":"runStream(java.util.stream.IntStream,java.util.function.Function)"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelRunner.ListCollector","l":"runStream(IntStream, Function<Integer, Integer>)","u":"runStream(java.util.stream.IntStream,java.util.function.Function)"},{"p":"don.demo.algo.cpuconcurrent.api","c":"StreamRunner","l":"runStream(S, Function<U, T>)","u":"runStream(S,java.util.function.Function)"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"setUp()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"setUp()"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector","l":"slowWorker"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator.MockDataDTO","l":"sumData"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"tearDown()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"tearDown()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"testCompareTo()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"testEquals()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"testGenerateBig()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"testGenerateSamll()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"testHashCode()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"DataGeneratorTest","l":"testOnly10()"},{"p":"don.demo.algo.cpuconcurrent.test","c":"ComputationResultTest","l":"testToString()"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"toString()"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"toString()"},{"p":"don.demo.algo.cpuconcurrent.support","c":"DataGenerator.MockDataDTO","l":"uniqueCount"},{"p":"don.demo.algo.cpuconcurrent.api","c":"ConcurrentCollector.ComputationResult","l":"value"},{"p":"don.demo.algo.cpuconcurrent","c":"ParallelCollect.Computation","l":"value"}];updateSearchResults();
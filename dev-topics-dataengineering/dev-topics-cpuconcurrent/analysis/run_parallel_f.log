
 Run the parallel stream timer runner for different types of collection mechanisms
 for both parallel and sequential operation.

 $ java -cp .;..\target\demodev-topics-cpuconcurrent-1.0.0-SNAPSHOT.jar don.demo.algo.cpuconcurrent.ParallelRunner


 List Collector
Parallel Runner --- 17+35-LTS-2724 -- Fast Worker

Parallelization performance using run selector 0 running on 16 cores and 15 threads.
  -- Average non-parallel[1] worker time: 0.0010 us, total non-parallel[1] worker time is 2.056 us for 2000 executions

Collector,Mode,N,MicroSec
ListCollector,non-Parallel[1],10,3.713
ListCollector,Parallel[15],10,1.412
ListCollector,non-Parallel[1],50,0.086
ListCollector,Parallel[15],50,1.376
ListCollector,non-Parallel[1],75,0.119
ListCollector,Parallel[15],75,0.287
ListCollector,non-Parallel[1],100,0.117
ListCollector,Parallel[15],100,0.440
ListCollector,non-Parallel[1],125,0.106
ListCollector,Parallel[15],125,0.257
ListCollector,non-Parallel[1],250,0.153
ListCollector,Parallel[15],250,0.360
ListCollector,non-Parallel[1],500,0.273
ListCollector,Parallel[15],500,0.412
ListCollector,non-Parallel[1],1000,0.486
ListCollector,Parallel[15],1000,0.539
ListCollector,non-Parallel[1],2000,0.834
ListCollector,Parallel[15],2000,0.881
ListCollector,non-Parallel[1],4000,1.465
ListCollector,Parallel[15],4000,2.932
ListCollector,non-Parallel[1],5000,1.775
ListCollector,Parallel[15],5000,2.860

--- Done


 forEach with Synchronized HashMap
Parallel Runner --- 17+35-LTS-2724 -- Fast Worker

Parallelization performance using run selector 1 running on 16 cores and 15 threads.
  -- Average non-parallel[1] worker time: 0.0010 us, total non-parallel[1] worker time is 2.041 us for 2000 executions

Collector,Mode,N,MicroSec
ForEachCollector,non-Parallel[1],10,2.748
ForEachCollector,Parallel[15],10,1.606
ForEachCollector,non-Parallel[1],50,0.102
ForEachCollector,Parallel[15],50,1.762
ForEachCollector,non-Parallel[1],75,0.160
ForEachCollector,Parallel[15],75,0.311
ForEachCollector,non-Parallel[1],100,0.147
ForEachCollector,Parallel[15],100,0.296
ForEachCollector,non-Parallel[1],125,0.397
ForEachCollector,Parallel[15],125,0.266
ForEachCollector,non-Parallel[1],250,0.210
ForEachCollector,Parallel[15],250,0.395
ForEachCollector,non-Parallel[1],500,0.401
ForEachCollector,Parallel[15],500,0.668
ForEachCollector,non-Parallel[1],1000,0.718
ForEachCollector,Parallel[15],1000,1.088
ForEachCollector,non-Parallel[1],2000,1.347
ForEachCollector,Parallel[15],2000,1.726
ForEachCollector,non-Parallel[1],4000,2.261
ForEachCollector,Parallel[15],4000,4.045
ForEachCollector,non-Parallel[1],5000,2.496
ForEachCollector,Parallel[15],5000,3.204

--- Done


 forEach with Concurrent HashMap
Parallel Runner --- 17+35-LTS-2724 -- Fast Worker

Parallelization performance using run selector 2 running on 16 cores and 15 threads.
  -- Average non-parallel[1] worker time: 0.0010 us, total non-parallel[1] worker time is 2.063 us for 2000 executions

Collector,Mode,N,MicroSec
ForEachConcurrentCollector,non-Parallel[1],10,2.362
ForEachConcurrentCollector,Parallel[15],10,1.546
ForEachConcurrentCollector,non-Parallel[1],50,0.183
ForEachConcurrentCollector,Parallel[15],50,1.334
ForEachConcurrentCollector,non-Parallel[1],75,0.253
ForEachConcurrentCollector,Parallel[15],75,0.283
ForEachConcurrentCollector,non-Parallel[1],100,0.220
ForEachConcurrentCollector,Parallel[15],100,0.371
ForEachConcurrentCollector,non-Parallel[1],125,0.305
ForEachConcurrentCollector,Parallel[15],125,0.340
ForEachConcurrentCollector,non-Parallel[1],250,0.339
ForEachConcurrentCollector,Parallel[15],250,0.376
ForEachConcurrentCollector,non-Parallel[1],500,0.596
ForEachConcurrentCollector,Parallel[15],500,0.590
ForEachConcurrentCollector,non-Parallel[1],1000,1.112
ForEachConcurrentCollector,Parallel[15],1000,1.233
ForEachConcurrentCollector,non-Parallel[1],2000,1.339
ForEachConcurrentCollector,Parallel[15],2000,2.189
ForEachConcurrentCollector,non-Parallel[1],4000,4.163
ForEachConcurrentCollector,Parallel[15],4000,5.254
ForEachConcurrentCollector,non-Parallel[1],5000,3.365
ForEachConcurrentCollector,Parallel[15],5000,5.122

--- Done

 . . . done
